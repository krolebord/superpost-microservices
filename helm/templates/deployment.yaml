{{- $defaults := . -}}

{{- range $index, $value := .Values.microservises }}
{{- $_ := set $value "nameOverride" $index }}
{{- $microservice := dict "Values" $value }}
{{- $defaultsCopy := $defaults | deepCopy }}
{{- with mergeOverwrite $defaultsCopy $microservice }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "common.fullname" . }}
spec:
  replicas: {{ $value.replicaCount | default 1 }}
  selector:
    matchLabels:
      {{- include "common.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "common.selectorLabels" . | nindent 8 }}
    spec:
      initContainers:
      {{- if $value.migrations }}
        - name: wait-for-pg
          image: busybox:latest
          imagePullPolicy: IfNotPresent
          command: ['sh', '-c', 'until nc -vz ${POD_NAME}.${POD_NAMESPACE} 5432; do echo "Waiting for postgres..."; sleep 3; done;']
          env:
            - name: POD_NAME
              value: postgres
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
        - name: {{ $value.migrations.image.name }}
          image: {{ $value.migrations.image.name }}
          imagePullPolicy: Never
          envFrom:
            - secretRef:
                name: {{ $value.migrations.secret }}
      {{- end }}
      containers:
        - image: {{ $value.image.name }}
          name: {{ $value.image.name }}
          imagePullPolicy: Never
          ports:
          {{- range $value.service.ports }}
          - containerPort: {{ .containerPort }}
            name: {{ .name }}
          {{- end}}
          envFrom:
            {{- range $value.configs }}
            - configMapRef:
                name: {{ . }}
            {{- end }}  
            {{- range $value.secrets }}
            - secretRef:
                name: {{ . }}
            {{- end }} 

{{ end }}
{{ end }}
